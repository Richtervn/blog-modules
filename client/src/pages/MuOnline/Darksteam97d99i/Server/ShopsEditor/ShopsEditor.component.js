import _ from 'underscore';
import './ShopsEditor.css';
import React, { Component } from 'react';
import services from '../../Darksteam97d99i.services';

import ShopSelector from './ShopSelector.container';
import { ExcItemOptions, ItemSelector, BasicItemOptions } from '../../components';
import { pad } from 'helpers';

class ShopsEditor extends Component {
  constructor(props) {
    super(props);
    this.state = {
      fileData: [
        '// Generated By VuPham',
        '',
        '// -------------------------------------------',
        '// [Lorencia] Hans The Blacksmith',
        '// -------------------------------------------',
        '',
        '// --------------------------------------------------------------------------------------------------------',
        '// Category   Index  Level  Duration  Skill   Luck   Option   Exc',
        '// --------------------------------------------------------------------------------------------------------'
      ],
      category: 'Swords',
      duration: 255,
      itemId: 0,
      luck: false,
      skill: false,
      option: 0,
      level: 0,
      exc1: false,
      exc2: false,
      exc3: false,
      exc4: false,
      exc5: false,
      exc6: false
    };

    this.changeCheck = this.changeCheck.bind(this);
    this.changeLevel = this.changeLevel.bind(this);
    this.generate = this.generate.bind(this);
    this.removeLine = this.removeLine.bind(this);
  }

  selectFile(file) {
    const nextState = [...this.state.fileData];
    nextState[3] = `// ${file}`;
    this.setState({ fileData: nextState });
  }

  changeCheck(name) {
    this.setState({ [name]: !this.state[name] });
  }

  changeLevel(event) {
    const { name, value } = event.target;
    this.setState({ [name]: value });
  }

  async generateFile() {
    const { data: { ShopList } } = this.props;
    const { fileData } = this.state;
    let fileName = _.findWhere(ShopList, { Name: fileData[3].replace('// ', '') }).File;
    let content = fileData.join('\n');
    content += '\nend';
    const { file } = await services.generateTextFile({
      formBody: {
        content,
        fileName: fileName.replace('.txt', '')
      }
    });

    const aTag = document.createElement('a');
    aTag.setAttribute('href', file);
    aTag.setAttribute('target', '_blank');
    aTag.setAttribute('download', fileName);
    aTag.style.display = 'none';
    document.body.appendChild(aTag);
    aTag.click();
    document.body.removeChild(aTag);
  }

  generateLine({ category, itemId, level, duration, skill, luck, option, exc1, exc2, exc3, exc4, exc5, exc6 }) {
    const { data } = this.props;
    let line = '';

    let itemDescription = '';

    data.Categories.forEach(cat => {
      if (cat.Name === category) {
        line += `   ${cat._id}`;
      }
    });

    line = pad(line, ' ', 15, itemId);
    line = pad(line, ' ', 22, level);
    line = pad(line, ' ', 29, duration);
    line = pad(line, ' ', 39, skill ? '1' : '0');
    line = pad(line, ' ', 47, luck ? '1' : '0');
    line = pad(line, ' ', 54, option);

    data[category].forEach(item => {
      if (parseInt(item._id, 10) === parseInt(itemId, 10)) {
        itemDescription += item.Name;
      }
    });

    let excOpt = 0;
    if (exc1) excOpt += 1;
    if (exc2) excOpt += 2;
    if (exc3) excOpt += 4;
    if (exc4) excOpt += 8;
    if (exc5) excOpt += 16;
    if (exc6) excOpt += 32;

    line = pad(line, ' ', 63, excOpt);
    if (level) {
      itemDescription += ` +${level}`;
    }
    if (skill) {
      itemDescription += ' +skill';
    }
    if (luck) {
      itemDescription += ' +luck';
    }
    if (excOpt > 0) {
      itemDescription += ' +excillent';
    }
    if (option) {
      itemDescription += ` +${option} options`;
    }
    return pad(line, ' ', 69, `// ${itemDescription}`);
  }

  generate() {
    const { category, itemId, level, duration, skill, luck, option, exc1, exc2, exc3, exc4, exc5, exc6 } = this.state;
    const nextState = { ...this.state };
    if (category === 'Sets') {
      ['Helms', 'Armors', 'Pants', 'Gloves', 'Boots'].forEach(part => {
        const line = this.generateLine({
          category: part,
          itemId,
          level,
          duration,
          skill,
          luck,
          option,
          exc1,
          exc2,
          exc3,
          exc4,
          exc5,
          exc6
        });
        nextState.fileData.push(line);
      });
    } else {
      const line = this.generateLine({
        category,
        itemId,
        level,
        duration,
        skill,
        luck,
        option,
        exc1,
        exc2,
        exc3,
        exc4,
        exc5,
        exc6
      });
      nextState.fileData.push(line);
    }
    this.setState(nextState);
  }

  removeLine(i) {
    const nextState = { ...this.state };
    nextState.fileData.splice(i, 1);
    this.setState({ fileData: nextState.fileData });
  }

  render() {
    const { exc1, exc2, exc3, exc4, exc5, exc6, category, itemId, level, luck, skill, option } = this.state;

    return (
      <div id="ds9799-shops-editor">
        <div className="item-col">
          <div className="shop-selector">
            <ShopSelector onSelect={e => this.selectFile(e.target.value)} />
          </div>
          <ItemSelector
            onSelectCategory={e => this.setState({ category: e.target.value })}
            category={category}
            onSelectItem={e => this.setState({ itemId: e.target.value })}
            itemId={itemId}
            itemLvl={level}
          />
          <BasicItemOptions
            luck={luck}
            skill={skill}
            onChangeCheck={this.changeCheck}
            option={option}
            level={level}
            onChangeLevel={this.changeLevel}
          />
          <ExcItemOptions
            exc={{ exc1, exc2, exc3, exc4, exc5, exc6 }}
            onChangeCheck={this.changeCheck}
            category={category}
            itemId={itemId}
          />
          <div className="mgt-10">
            <button className="btn btn-block btn-danger" onClick={() => this.generate()}>
              Generate
            </button>
          </div>
        </div>
        <div className="shop-col">
          {this.state.fileData.filter((line, i) => i <= 8).map((line, i) => (
            <div className="generated-line" key={i}>
              {line}
            </div>
          ))}
          <div className="preview-body">
            {this.state.fileData.filter((line, i) => i > 8).map((line, i) => (
              <div className="generated-line" key={i}>
                <button className="btn btn-danger btn-sm" onClick={() => this.removeLine(i + 9)}>
                  <i className="fa fa-times" />
                </button>
                {line}
              </div>
            ))}
          </div>
          <div className="preview-feature">
            <button className="btn btn-primary btn-block" onClick={() => this.generateFile()}>
              Generate Text File
            </button>
          </div>
        </div>
      </div>
    );
  }
}

export default ShopsEditor;
