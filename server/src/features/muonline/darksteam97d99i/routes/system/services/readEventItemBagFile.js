import _ from 'underscore';
import Promise from 'bluebird';

let tmpData = {};

export default async (fileName, getGameData, readMuServerFile, writeFile, pad) => {
  const destination = `./src/features/muonline/darksteam97d99i/data/source/${fileName}`;
  const lines = await readMuServerFile(destination);

  let shortDivider = '// ';
  shortDivider = pad(shortDivider, '-', 74, '');

  let fileContent = '';
  const fileHeader = '// Generated By VuPham\n';
  fileContent += fileHeader;

  const colDescription = [shortDivider, '// [Category] [Index] [Level] [Skill] [Luck] [Option]', shortDivider].join(
    '\n'
  );
  fileContent += `\n${colDescription}\n`;

  const Categories = await getGameData('Categories');
  await Promise.each(lines, async attributes => {
    let lineText = `   ${attributes[0]}`;
    lineText = pad(lineText, ' ', 15, attributes[1]);
    lineText = pad(lineText, ' ', 23, attributes[2]);
    lineText = pad(lineText, ' ', 31, attributes[3]);
    lineText = pad(lineText, ' ', 39, attributes[4]);
    lineText = pad(lineText, ' ', 46, attributes[5]);

    let lineDescription = '// ';
    const category = _.findWhere(Categories, { _id: parseInt(attributes[0]) });

    if (!tmpData[category.Name]) {
      tmpData[category.Name] = await getGameData(category.Name);
    }

    const item = _.findWhere(tmpData[category.Name], { _id: attributes[1] });

    lineDescription += item.Name;
    if (attributes[2] !== '0') {
      lineDescription += ` +${attributes[2]}`;
    }
    if (attributes[3] !== '0') {
      lineDescription += ' +skill';
    }
    if (attributes[4] !== '0') {
      lineDescription += ' +luck';
    }
    if (attributes[5] !== '0') {
      lineDescription += ` +${attributes[5]} option`;
    }
    lineText = pad(lineText, ' ', 55, lineDescription);

    fileContent += `${lineText}\n`;
  });

  await writeFile(`./public/Mu Online/Darksteam97d99i/Generated Files/${fileName}`, fileContent);
  return { file: `./public/Mu Online/Darksteam97d99i/Generated Files/${fileName}`, name: fileName };
};
